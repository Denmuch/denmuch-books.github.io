{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/in-memory-data.service.ts","webpack:///./src/app/pages/book-list/book-list.component.html","webpack:///./src/app/pages/book-list/book-list.component.ts","webpack:///./src/app/pages/book/book.component.html","webpack:///./src/app/pages/book/book.component.ts","webpack:///./src/app/pages/index.ts","webpack:///./src/app/pages/page-not-found.component.ts","webpack:///./src/app/shared/book.service.ts","webpack:///./src/app/shared/nav/nav.component.html","webpack:///./src/app/shared/nav/nav.component.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/shared/show-errors.component.ts","webpack:///./src/app/shared/validation.directive.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule }       from '@angular/core';\nimport { RouterModule }   from '@angular/router';\n\nimport * as page from './pages';\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot([\n      { path: '', redirectTo: 'books/new', pathMatch: 'full'},\n      { path: 'books', component: page.BookListComponent },\n      { path: 'books/new', component: page.BookComponent },\n      { path: '**', component: page.PageNotFoundComponent }\n    ])\n  ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule { };","module.exports = \"\"","module.exports = \"<app-nav></app-nav>\\n\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SharedModule } from './shared/shared.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\n\nimport { InMemoryDataService } from './in-memory-data.service';\n\nimport { AppComponent } from './app.component';\nimport { COMPONENTS as pages } from './pages';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ...pages,\n  ],\n  imports: [\n    BrowserModule,\n    SharedModule,\n    AppRoutingModule,\n    TextMaskModule,\n    HttpClientModule,\n    HttpClientInMemoryWebApiModule.forRoot(\n      InMemoryDataService, {dataEncapsulation: false})\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { InMemoryDbService } from 'angular-in-memory-web-api';\n\nexport class InMemoryDataService implements InMemoryDbService {\n    createDb() {\n            const books = [\n                {\n                    id: 1,\n                    name: 'Название книги 1',\n                    author: 'Автор 1',\n                    year: '1990',\n                    date: '2018-05-31',\n                    comment: 'Комментарий',\n\n                },\n                {\n                    id: 2,\n                    name: 'Название книги 2',\n                    author: 'Автор 2',\n                    year: '1921',\n                    date: '2018-05-31',\n                    comment: 'Комментарий 2',\n\n                },\n                {\n                    id: 3,\n                    name: 'Название книги 3',\n                    author: 'Автор 3',\n                    year: '1921',\n                    date: '2018-05-31',\n                    comment: 'Комментарий 3',\n\n                },\n                {\n                    id: 4,\n                    name: 'Название книги 4',\n                    author: 'Автор 4',\n                    year: '1923',\n                    date: '2018-05-31',\n                    comment: 'Комментарий 4',\n\n                }\n            ];\n\n            return {books, length: books.length};\n    }\n  \n}","module.exports = \"<div class=\\\"container-fluid\\\">\\n    <div class=\\\"table-responsive\\\">\\n        <table #table class=\\\"table table-hover\\\">\\n            <thead>\\n                <tr>\\n                    <th scope=\\\"col\\\">#</th>\\n                    <th scope=\\\"col\\\">Название</th>\\n                    <th scope=\\\"col\\\">Автор</th>\\n                    <th scope=\\\"col\\\">Год издания</th>\\n                    <th scope=\\\"col\\\">Дата добавления</th>\\n                    <th scope=\\\"col\\\">Комментарий</th>\\n                    <th scope=\\\"col\\\"></th>\\n                    <th scope=\\\"col\\\"></th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                <tr *ngFor=\\\"let book of books;\\\">\\n                    <td>{{book.id}}</td>\\n        \\n                    <td>\\n                        <span *ngIf=\\\"!edit(book)\\\">{{book.name}}</span>\\n                        <input *ngIf=\\\"edit(book)\\\" type=\\\"text\\\" [(ngModel)]=\\\"book.name\\\" name=\\\"name\\\">\\n                    </td>\\n                    \\n                    <td>\\n                        <span *ngIf=\\\"!edit(book)\\\">{{book.author}}</span>\\n                        <input *ngIf=\\\"edit(book)\\\" type=\\\"text\\\" [(ngModel)]=\\\"book.author\\\" name=\\\"author\\\">\\n                    </td>\\n                    <td>\\n                        <span *ngIf=\\\"!edit(book)\\\">{{book.year}}</span>\\n                        <input *ngIf=\\\"edit(book)\\\" type=\\\"text\\\" [(ngModel)]=\\\"book.year\\\" name=\\\"year\\\">\\n                    </td>\\n        \\n                    <td>\\n                        <span *ngIf=\\\"!edit(book)\\\">{{book.date}}</span>\\n                        <input *ngIf=\\\"edit(book)\\\" type=\\\"text\\\" [(ngModel)]=\\\"book.date\\\" name=\\\"date\\\">\\n                    </td>\\n        \\n                    <td>\\n                        <p *ngIf=\\\"!edit(book)\\\">{{book.comment}}</p>\\n                        <textarea *ngIf=\\\"edit(book)\\\" [(ngModel)]=\\\"book.comment\\\" name=\\\"comment\\\"></textarea>\\n                    </td>\\n                    <td><button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"editBook(book)\\\"><i class=\\\"fa fa-edit\\\"></i></button></td>\\n                    <td><button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)=\\\"deleteBook(book)\\\"><i class=\\\"fa fa-minus\\\"></i></button></td>\\n                </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n</div>\"","import { Component, OnInit, HostListener, ViewChild, ElementRef, OnDestroy } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Book } from '../../shared/book.model';\nimport { BookService } from '../../shared/book.service';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\n@Component({\n    selector: 'app-book-list',\n    templateUrl: './book-list.component.html'\n})\n\nexport class BookListComponent implements OnInit, OnDestroy {\n    books: Book[];\n    private editable: boolean = false;\n    private editableBook = null;\n    private subscription: Subscription;\n\n    @ViewChild('table') table: ElementRef;\n\n    @HostListener('document:click', ['$event'])\n    updateBook(event: Event) {\n        if (!this.table.nativeElement.contains(event.target)) {\n            if(this.editableBook) {\n                this.bookService.updateBook(this.editableBook)\n                    .subscribe(() => this.loadBooks() );\n            }\n            this.editableBook = null;\n        }\n    }\n\n    constructor(\n        private bookService: BookService,\n        private router: Router,\n    ) {\n\n    }\n\n    ngOnInit() {\n        this.loadBooks();\n    }\n    \n    ngOnDestroy() {\n        this.unsubscribe();\n    }\n\n    edit(book) {\n        if (this.editableBook && this.editableBook.id === book.id) {\n            return true;\n        }\n    }\n\n    editBook(book) {\n        this.editableBook = book;\n    }\n\n    deleteBook(book) {\n        this.bookService.deleteBook(book)\n            .subscribe(books => {\n                this.loadBooks();\n            });\n    }\n \n    private loadBooks() {\n        this.bookService.getBooks()\n            .subscribe(books => {\n                this.books = books;\n            });\n    }\n\n    private unsubscribe() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n            this.subscription = null;\n        }\n    }\n}","module.exports = \"<div class=\\\"container\\\">\\n    <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"saveBook(form.value)\\\">\\n        <div class=\\\"d-flex justify-content-center m-5\\\">\\n            <label>Новая книга</label>\\n        </div>\\n    \\n        <div class=\\\"form-group row\\\">\\n            <label class=\\\"col-xl-2 col-form-label\\\">Название</label>\\n            <div class=\\\"col-xl-10\\\">\\n                <input validate #name=\\\"ngModel\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"book.name\\\" name=\\\"name\\\" required>\\n            </div>\\n            <show-errors [control]=\\\"name\\\"></show-errors>\\n        </div>\\n    \\n        <div class=\\\"form-group row\\\">\\n            <label class=\\\"col-xl-2 col-form-label\\\">Автор</label>\\n            <div class=\\\"col-xl-10\\\">\\n                <input validate #author=\\\"ngModel\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"book.author\\\" name=\\\"author\\\" required>\\n            </div>\\n            <show-errors [control]=\\\"author\\\"></show-errors>\\n        </div>\\n    \\n        <div class=\\\"form-group row\\\">\\n            <label for=\\\"inputPassword\\\" class=\\\"col-xl-2 col-form-label\\\">Год издательства</label>\\n            <div class=\\\"col-xl-10\\\">\\n                <input validate #year=\\\"ngModel\\\" minlength=\\\"4\\\" [textMask]=\\\"{mask: yearMask, guide: false}\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"book.year\\\" name=\\\"year\\\" required>\\n            </div>\\n            <show-errors [control]=\\\"year\\\"></show-errors>\\n        </div>\\n    \\n        <div class=\\\"form-group row\\\">\\n            <label for=\\\"staticEmail\\\" class=\\\"col-xl-2 col-form-label\\\">Дата добавления</label>\\n            <div class=\\\"col-xl-10\\\">\\n                <input validate #date=\\\"ngModel\\\" [textMask]=\\\"{mask: dateMask, guide: false}\\\"  type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"book.date\\\" name=\\\"date\\\" required>\\n            </div>  \\n            <show-errors [control]=\\\"date\\\"></show-errors>\\n        </div>\\n    \\n        <div class=\\\"form-group row\\\">\\n            <label for=\\\"staticEmail\\\" class=\\\"col-xl-2 col-form-label\\\">Отзыв</label>\\n            <div class=\\\"col-xl-10\\\">\\n                <textarea class=\\\"form-control\\\" [(ngModel)]=\\\"book.comment\\\" name=\\\"comment\\\" rows=\\\"3\\\" maxlength=\\\"50\\\" style=\\\"resize: none;\\\"></textarea>\\n            </div>\\n        </div>\\n    \\n        <div class=\\\"d-flex justify-content-center mt-5\\\">\\n            <button [title]=\\\"buttonTitle\\\" type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!form.valid\\\">Сохранить</button>\\n        </div>\\n    </form>            \\n</div>\"","import { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\nimport { AbstractControl, NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { Book } from '../../shared/book.model';\nimport { BookService } from '../../shared/book.service';\n\n@Component({\n    selector: 'app-book',\n    templateUrl: './book.component.html',\n    styles: [`\n        input.ng-invalid.ng-touched {\n            border: 1px solid red;\n        }\n    `]\n})\n\nexport class BookComponent implements OnInit, OnDestroy {\n    public book: Book;\n    public yearMask = [/\\d/, /\\d/, /\\d/, /\\d/];\n    public dateMask = [/\\d/, /\\d/, /\\d/, /\\d/, '-', /[0-1]/, /\\d/, '-', /[0-3]/, /\\d/];\n\n    private subscription: Subscription;\n\n    get buttonTitle() {\n        return !this.form.valid ? 'Все поля обязательны для заполнения, кроме отзыва' : '';\n    }\n\n    @ViewChild('form') form: NgForm;\n\n    constructor(\n        private bookService: BookService,\n        private router: Router,\n    ) {\n        \n    }\n\n    ngOnInit() {\n        this.book = {} as Book;\n    }\n\n    ngOnDestroy() {\n        this.unsubscribe();\n    }\n\n    saveBook(book) {\n        this.subscription = this.bookService.addBook(book)\n            .subscribe(\n                result => {\n                    this.gotoBookList();\n                },\n                error => alert(error)\n            );\n    }\n\n    private gotoBookList() {\n        this.router.navigate(['/books']);\n    }\n\n    private unsubscribe() {\n        if(this.subscription) {\n            this.subscription.unsubscribe();\n            this.subscription = null;\n        }\n    }\n}\n","import { BookComponent } from './book/book.component';\nimport { BookListComponent } from './book-list/book-list.component';\nimport { PageNotFoundComponent } from './page-not-found.component';\n\nexport const COMPONENTS = [\n    BookComponent,\n    BookListComponent,\n    PageNotFoundComponent,\n];\n\nexport {\n    BookComponent,\n    BookListComponent,\n    PageNotFoundComponent,\n}","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-page-not-found',\n    template: `\n        <h6>Page not found</h6>\n    `\n})\n\nexport class PageNotFoundComponent {\n    \n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\n\nimport { Observable, Subject } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { Book } from './book.model';\n\nconst httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BookService {\n    private url = 'api/books';\n    private bookSubject = new Subject<any>();\n\n    constructor(\n        private http: HttpClient,\n    ) {\n\n    }\n\n    addBook(book: Book): Observable<Book> {        \n        return this.http.post<Book>(this.url, book, httpOptions)\n            .pipe(\n                tap((book: Book) => { \n                    this.log(`added book with id=${book.id}`);\n                    this.bookSubject.next();\n            }),\n                catchError(this.handleError<Book>('addBook'))\n            );\n    }\n\n    getBook(guid: number | string): Observable<Book> {\n        return this.http.get<Book>(`${this.url}/${guid}`);\n    }\n\n    getBooks() {\n        return this.http.get<Book[]>(this.url)\n            .pipe(\n                tap(books => this.log('fetched books')),\n                catchError(this.handleError('getBooks'))            \n            ) as Observable<Book[]>\n    }\n    \n    deleteBook(book: Book | number): Observable<Book> {\n        const id = typeof book === 'number' ? book : book.id;\n        const url = `${this.url}/${id}`;\n\n        return this.http.delete<Book>(url, httpOptions)\n            .pipe(\n                tap(_ => { \n                    this.log(`deleted book id=${id}`);\n                    this.bookSubject.next();\n                }),\n                catchError(this.handleError<Book>('deleteBook'))\n            )\n    }\n\n    updateBook(book: Book): Observable<any> {\n        return this.http.put(this.url, book, httpOptions).pipe(\n          tap(_ => this.log(`updated book id=${book.id}`)),\n          catchError(this.handleError<any>('updatedBook'))\n        );\n      }\n\n\n    private handleError<T> (operation = 'operation') {\n        return (error: HttpErrorResponse): Observable<T> => {\n    \n          // TODO: send the error to remote logging infrastructure\n          console.error(error); // log to console instead\n    \n          const message = (error.error instanceof ErrorEvent) ?\n            error.error.message :\n           `server returned code ${error.status} with body \"${error['body'].error}\"`;\n    \n          // TODO: better job of transforming error for user consumption\n          throw new Error(`${operation} failed: ${message}`);\n        };\n    \n      }\n    \n      private log(message: string) {\n        console.log('BookService: ' + message);\n      }\n\n      getAction(): Observable<any> {\n        return this.bookSubject.asObservable();\n    }\n    \n}","module.exports = \"<nav #menu class=\\\"navbar navbar-expand-md navbar-light bg-light\\\">\\n  <a class=\\\"navbar-brand\\\" href routerLink=\\\"/books/new\\\"><i class=\\\"fa fa-book\\\"></i></a>\\n  <button (click)=\\\"toggleMenu()\\\" class=\\\"navbar-toggler\\\" type=\\\"button\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  \\n  <div class=\\\"collapse navbar-collapse\\\" [ngClass]=\\\"{'show': collapse }\\\">\\n    <ul class=\\\"navbar-nav\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" href routerLink=\\\"/books/new\\\" (click)=\\\"navigate()\\\">Новая книга</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" href routerLink=\\\"/books\\\" (click)=\\\"navigate()\\\">Все книги({{booksLength}})</a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\"","import { Component, OnInit, OnDestroy, HostListener, ViewChild, ElementRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BookService } from '../book.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n    selector: 'app-nav',\n    templateUrl: './nav.component.html',\n    styles: [`\n        .nav-collapse.collapse {\n            height: auto;\n        }\n    `]\n})\n\nexport class NavComponent implements OnInit, OnDestroy {\n    booksLength: number = 0;    \n    collapse = false;\n\n    private lengthSubscription: Subscription;\n    private actionSubscription: Subscription;\n\n    @ViewChild('menu') menu: ElementRef;\n        \n    @HostListener('document:click', ['$event'])\n    updateBook(event: Event) {\n        if (!this.menu.nativeElement.contains(event.target)) {\n            this.collapse = false;\n        }\n    }\n\n    constructor(\n        private service: BookService,\n        private router: Router,\n    ) {\n        \n    }\n\n    ngOnInit() {\n        this.getAction();\n        this.getLength();\n    }\n\n    ngOnDestroy() {\n        this.unsubscribe();\n    }\n\n    getAction() {\n        this.actionSubscription = this.service.getAction().subscribe(result => {\n            this.getLength();\n        })\n    }\n\n    getLength() {\n        this.lengthSubscription = this.service.getBooks().subscribe(books => {\n            this.booksLength = books.length;\n        })\n    }\n\n    toggleMenu(): void {\n        this.collapse = !this.collapse;\n    }\n\n    navigate() {\n        this.collapse = false;\n    }\n\n    private unsubscribe() {\n        if (this.lengthSubscription) {\n            this.lengthSubscription.unsubscribe();\n            this.lengthSubscription = null;\n        }\n\n        if (this.actionSubscription) {\n            this.actionSubscription.unsubscribe();\n            this.actionSubscription = null;\n        }\n    }\n}","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule } from '@angular/router';\n\nimport { NavComponent } from './nav/nav.component';\nimport { ValidationDirecitve } from './validation.directive';\nimport { ShowErrorsComponent } from './show-errors.component';\n\n@NgModule({\n    imports: [\n        RouterModule, \n        CommonModule\n    ],\n    exports: [\n        FormsModule,\n        CommonModule,\n        HttpModule,\n        NavComponent,\n        ValidationDirecitve,\n        ShowErrorsComponent,\n    ],\n    declarations: [\n        NavComponent, \n        ShowErrorsComponent, \n        ValidationDirecitve\n    ]\n\n})\n\nexport class SharedModule {\n  \n}","// show-errors.component.ts\nimport { Component, Input } from '@angular/core';\nimport { AbstractControlDirective, AbstractControl } from '@angular/forms';\n\n@Component({\n selector: 'show-errors',\n template: `\n    <div *ngIf=\"shouldShowErrors()\">\n        <small class=\"col-xl-10 offset-xl-2\" style=\"color: red\" *ngFor=\"let error of listOfErrors()\">{{error}}</small>\n    </div>\n`,\nstyles: [':host { width: 100%;}']\n})\nexport class ShowErrorsComponent {\n\n @Input()\n private control: AbstractControlDirective | AbstractControl;\n\n shouldShowErrors(): boolean {\n   return this.control &&\n     this.control.errors &&\n     (this.control.dirty || this.control.touched);\n }\n\n listOfErrors(): string[] {\n   return Object.keys(this.control.errors)\n     .map(field => this.getMessage(field, this.control.errors[field]));\n }\n\n private getMessage(type: string, params: any) {\n   return ShowErrorsComponent.errorMessages[type](params);\n }\n\n private static readonly errorMessages = {\n    'required': () => 'Поле необходимо для заполнения',\n    'minlength': (params) => 'Длина должна быть не меньше ' + params.requiredLength,\n    'maxlength': (params) => 'Длина должна быть не больше' + params.requiredLength,\n    'dateInvalid': (params) => params.message,\n  };\n}","import { Directive, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, Validator, ValidatorFn, Validators, ValidationErrors } from '@angular/forms';\n\nfunction dateValidator(c: AbstractControl): ValidationErrors{\n    if (c.pristine) {\n        return null;\n    }\n    if ((c.value !== undefined && c.value !== '' && c.value != null)) {\n\n        let month = null;\n        let day = null;\n        let year = null;\n        let currentYear = new Date().getFullYear();\n\n        if (c.value.indexOf('-') > -1) {\n            var res = c.value.split(\"-\");           \n            if (res.length > 1) {\n                year = res[0];\n                month = res[1];\n                day = res[2];\n            }                          \n        }\n        else {\n            if (c.value.length == 8) {\n                month = c.value.substring(0, 2);\n                day = c.value.substring(2, 4);\n                year = c.value.substring(4, 8);\n            }            \n        }\n\n        month = Number(month);\n        day = Number(day);\n        year = Number(year);\n\n        if (month && (month < 1 || month > 12)) { // check month range\n            return { 'dateInvalid': {'message' : 'Ошибка в месяце'} };\n        }\n\n        if (day && (day < 1 || day > 31 || day.toString() === '00' )) {  // check date range\n            return { 'dateInvalid': {'message' : 'Ошибка в дате'}  };\n        }\n\n        if ((month === 4 || month === 6 || month === 9 || month === 11) && day === 31) { // check 31 date\n            return { 'dateInvalid': {'message' : '31-e число не может быть в указанном месяце'}  };\n        }\n\n        if (month == 2) { // check for february 29th\n            var isleap = (year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0));\n            if (day > 29 || (day === 29 && !isleap)) {\n                return { 'dateInvalid': {'message' : '29 февраля может быть только в високосный год'}  };\n            }\n        }\n    }\n    return null;\n}\n\n@Directive({\n  selector: '[validate]',\n  providers: [{provide: NG_VALIDATORS, useExisting: ValidationDirecitve, multi: true}]\n})\nexport class ValidationDirecitve implements Validator {\n\n  validate(control: AbstractControl): {[key: string]: any} {\n    return dateValidator(control);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}